<project name="ProteomeCommons.org Tranche Repository" default="dist" basedir="./">
    <description>This is the Ant build script for the ProteomeCommons.org Tranche Repository.</description>

    <!-- Print out current date/time for log -->
    <tstamp><format property="BUILD_TIME" pattern="MM/dd/yyyy hh:mm aa" /></tstamp>
    <echo message="Build on ${BUILD_TIME}"/>
    
    <!-- load properties from build.properties -->
    <property file="build.properties"/>

    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="lib"  location="lib"/>
    <property name="build" location="b"/>
    <property name="build.rt" location="${build}/rt"/>
    <property name="dist.files" location="${dist}/files"/>
    <property name="name.lib" value="lib"/>
    <property name="dist.lib" location="${dist}/${name.lib}"/>
    <property name="name.jar" value="pc-tranche.jar"/>
    <property name="dist.jar" location="${dist}/${name.jar}"/>
    <property name="dist.zip" location="${dist}/pc-tranche-b${buildNumber}.zip"/>

    <!-- tools -->
    <property name="dir.tools" location="build/tools"/>
    <property name="build.tools" location="${build}/tools"/>
    <property name="dist.tools.zip" location="${dist}/pc-tranche-tools-b${buildNumber}.zip"/>
    <property name="dir.server" location="build/server"/>
    <property name="build.server.jar" location="${build.tools}/pc-tranche-server.jar"/>
    <property name="dir.get" location="build/get"/>
    <property name="build.get.jar" location="${build.tools}/pc-tranche-get.jar"/>
    <property name="dir.add" location="build/add"/>
    <property name="build.add.jar" location="${build.tools}/pc-tranche-add.jar"/>
    <property name="dir.gui" location="build/gui"/>
    <property name="build.gui.jar" location="${build.tools}/pc-tranche-gui.jar"/>

    <!-- path required for runtime compiling-->
    <path id="path.rt.compile">
        <fileset dir="${lib}" includes="*.jar"/>
    </path>

    <target name="clean" description="Delete all files from the previous build.">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <!-- tomcat makes this directory -->
        <delete dir="work"/>
        <delete file="build.xml~"/>
    </target>

    <target name="init" depends="clean">
        <tstamp/>
        <mkdir dir="${build}"/>
        <mkdir dir="${build.rt}"/>
    </target>

    <target name="rt.compile" depends="init" description="Compiles the source code for this project.">
        <mkdir dir="${build}/java"/>
        <copy todir="${build}/java">
            <fileset dir="${src}"/>
        </copy>
        <copy todir="${dist.lib}">
            <fileset dir="${lib}"/>
        </copy>

        <!-- replace all placeholder tokens -->
        <replace includes="**/*.html,**/*.java" dir="${build}/java" token="@buildNumber" value="${buildNumber}" />

        <!-- compile all the code -->
        <javac destdir="${build.rt}" debug="true" source="1.5">
            <src path="${build}/java"/>
            <classpath refid="path.rt.compile"/>
        </javac>

        <!-- copy all non-java files from src to dest dir -->
        <copy todir="${build.rt}">
            <fileset dir="${src}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>

        <!-- make a JAR representing the project's code -->
        <jar jarfile="${dist.jar}" basedir="${build.rt}">
            <manifest>
                <attribute name="Main-Class" value="org.proteomecommons.tranche.LocalDataServer"/>
            </manifest>
        </jar>
    </target>

    <target name="dist" description="A build of the code.">
        <antcall target="rt.compile" />
        <antcall target="dist.tools" />
        <antcall target="sign-jars" />
        <zip destfile="${dist.zip}">
            <fileset file="${dist.jar}"/>
            <zipfileset dir="${dist.lib}" prefix="${name.lib}"/>
        </zip>
    </target>

    <target name="dist.tools" description="Make a command line tools release.">
        <mkdir dir="${build.tools}"/>
        <mkdir dir="${build.tools}/lib"/>
        <copy todir="${build.tools}/lib">
            <fileset dir="${lib}" includes="*.jar"/>
        </copy>
        <copy todir="${build.tools}">
            <fileset dir="${dir.tools}"/>
        </copy>
        <jar jarfile="${build.server.jar}" manifest="${dir.server}/MANIFEST.MF" basedir="${build.rt}" />
        <jar jarfile="${build.add.jar}" manifest="${dir.add}/MANIFEST.MF" basedir="${build.rt}" />
        <jar jarfile="${build.get.jar}" manifest="${dir.get}/MANIFEST.MF" basedir="${build.rt}" />
        <jar jarfile="${build.gui.jar}" manifest="${dir.gui}/MANIFEST.MF" basedir="${build.rt}" />
        <zip destfile="${dist.tools.zip}" basedir="${build.tools}" />
    </target>

    <target name="sign-jars">
        <property name="pc-tranche.jar" value="${dist.jar}" />
        <property name="pc-tranche" value="${dist}/pc-tranche" />
        <unzip src="${pc-tranche.jar}" dest="${pc-tranche}">
            <patternset>
                <exclude name="**/*.RSA"/>
                <exclude name="**/*.rsa"/>
                <exclude name="**/*.sf"/>
                <exclude name="**/*.SF"/>
            </patternset>
        </unzip>
        <delete file="${pc-tranche.jar}"/>
        <zip destfile="${pc-tranche.jar}" basedir="${pc-tranche}"/>
        <delete dir="${pc-tranche}"/>
        <signjar jar="${pc-tranche.jar}" alias="${keystoreAlias}" keystore="${keystore}" storepass="${keystorePassword}"/>

        <property name="bcprov-jdk15-130.jar" value="${dist.lib}/bcprov-jdk15-130.jar" />
        <property name="bcprov-jdk15-130" value="${dist.lib}/bcprov-jdk15-130" />
        <unzip src="${bcprov-jdk15-130.jar}" dest="${bcprov-jdk15-130}">
            <patternset>
                <exclude name="**/*.RSA"/>
                <exclude name="**/*.rsa"/>
                <exclude name="**/*.sf"/>
                <exclude name="**/*.SF"/>
            </patternset>
        </unzip>
        <delete file="${bcprov-jdk15-130.jar}"/>
        <zip destfile="${bcprov-jdk15-130.jar}" basedir="${bcprov-jdk15-130}"/>
        <delete dir="${bcprov-jdk15-130}"/>
        <signjar jar="${bcprov-jdk15-130.jar}" alias="${keystoreAlias}" keystore="${keystore}" storepass="${keystorePassword}"/>

        <property name="commons-logging.jar" value="${dist.lib}/commons-logging.jar" />
        <property name="commons-logging" value="${dist.lib}/commons-logging" />
        <unzip src="${commons-logging.jar}" dest="${commons-logging}">
            <patternset>
                <exclude name="**/*.RSA"/>
                <exclude name="**/*.rsa"/>
                <exclude name="**/*.sf"/>
                <exclude name="**/*.SF"/>
            </patternset>
        </unzip>
        <delete file="${commons-logging.jar}"/>
        <zip destfile="${commons-logging.jar}" basedir="${commons-logging}"/>
        <delete dir="${commons-logging}"/>
        <signjar jar="${commons-logging.jar}" alias="${keystoreAlias}" keystore="${keystore}" storepass="${keystorePassword}"/>

        <property name="commons-codec-1.3.jar" value="${dist.lib}/commons-codec-1.3.jar" />
        <property name="commons-codec-1.3" value="${dist.lib}/commons-codec-1.3" />
        <unzip src="${commons-codec-1.3.jar}" dest="${commons-codec-1.3}">
            <patternset>
                <exclude name="**/*.RSA"/>
                <exclude name="**/*.rsa"/>
                <exclude name="**/*.sf"/>
                <exclude name="**/*.SF"/>
            </patternset>
        </unzip>
        <delete file="${commons-codec-1.3.jar}"/>
        <zip destfile="${commons-codec-1.3.jar}" basedir="${commons-codec-1.3}"/>
        <delete dir="${commons-codec-1.3}"/>
        <signjar jar="${commons-codec-1.3.jar}" alias="${keystoreAlias}" keystore="${keystore}" storepass="${keystorePassword}"/>

        <property name="commons-net-1.4.1.jar" value="${dist.lib}/commons-net-1.4.1.jar" />
        <property name="commons-net-1.4.1" value="${dist.lib}/commons-net-1.4.1" />
        <unzip src="${commons-net-1.4.1.jar}" dest="${commons-net-1.4.1}">
            <patternset>
                <exclude name="**/*.RSA"/>
                <exclude name="**/*.rsa"/>
                <exclude name="**/*.sf"/>
                <exclude name="**/*.SF"/>
            </patternset>
        </unzip>
        <delete file="${commons-net-1.4.1.jar}"/>
        <zip destfile="${commons-net-1.4.1.jar}" basedir="${commons-net-1.4.1}"/>
        <delete dir="${commons-net-1.4.1}"/>
        <signjar jar="${commons-net-1.4.1.jar}" alias="${keystoreAlias}" keystore="${keystore}" storepass="${keystorePassword}"/>

        <property name="commons-httpclient-3.0-rc4.jar" value="${dist.lib}/commons-httpclient-3.0-rc4.jar" />
        <property name="commons-httpclient-3.0-rc4" value="${dist.lib}/commons-httpclient-3.0-rc4" />
        <unzip src="${commons-httpclient-3.0-rc4.jar}" dest="${commons-httpclient-3.0-rc4}">
            <patternset>
                <exclude name="**/*.RSA"/>
                <exclude name="**/*.rsa"/>
                <exclude name="**/*.sf"/>
                <exclude name="**/*.SF"/>
            </patternset>
        </unzip>
        <delete file="${commons-httpclient-3.0-rc4.jar}"/>
        <zip destfile="${commons-httpclient-3.0-rc4.jar}" basedir="${commons-httpclient-3.0-rc4}"/>
        <delete dir="${commons-httpclient-3.0-rc4}"/>
        <signjar jar="${commons-httpclient-3.0-rc4.jar}" alias="${keystoreAlias}" keystore="${keystore}" storepass="${keystorePassword}"/>

        <property name="ProteomeCommons.org-IO.jar" value="${dist.lib}/ProteomeCommons.org-IO.jar" />
        <property name="ProteomeCommons.org-IO" value="${dist.lib}/ProteomeCommons.org-IO" />
        <unzip src="${ProteomeCommons.org-IO.jar}" dest="${ProteomeCommons.org-IO}">
            <patternset>
                <exclude name="**/*.RSA"/>
                <exclude name="**/*.rsa"/>
                <exclude name="**/*.sf"/>
                <exclude name="**/*.SF"/>
            </patternset>
        </unzip>
        <delete file="${ProteomeCommons.org-IO.jar}"/>
        <zip destfile="${ProteomeCommons.org-IO.jar}" basedir="${ProteomeCommons.org-IO}"/>
        <delete dir="${ProteomeCommons.org-IO}"/>
        <signjar jar="${ProteomeCommons.org-IO.jar}" alias="${keystoreAlias}" keystore="${keystore}" storepass="${keystorePassword}"/>

        <property name="tranche.jar" value="${dist.lib}/tranche.jar" />
        <property name="tranche" value="${dist.lib}/tranche" />
        <unzip src="${tranche.jar}" dest="${tranche}">
            <patternset>
                <exclude name="**/*.RSA"/>
                <exclude name="**/*.rsa"/>
                <exclude name="**/*.sf"/>
                <exclude name="**/*.SF"/>
            </patternset>
        </unzip>
        <delete file="${tranche.jar}"/>
        <zip destfile="${tranche.jar}" basedir="${tranche}"/>
        <delete dir="${tranche}"/>
        <signjar jar="${tranche.jar}" alias="${keystoreAlias}" keystore="${keystore}" storepass="${keystorePassword}"/>

        <property name="tranche-gui.jar" value="${dist.lib}/tranche-gui.jar" />
        <property name="tranche-gui" value="${dist.lib}/tranche-gui" />
        <unzip src="${tranche-gui.jar}" dest="${tranche-gui}">
            <patternset>
                <exclude name="**/*.RSA"/>
                <exclude name="**/*.rsa"/>
                <exclude name="**/*.sf"/>
                <exclude name="**/*.SF"/>
            </patternset>
        </unzip>
        <delete file="${tranche-gui.jar}"/>
        <zip destfile="${tranche-gui.jar}" basedir="${tranche-gui}"/>
        <delete dir="${tranche-gui}"/>
        <signjar jar="${tranche-gui.jar}" alias="${keystoreAlias}" keystore="${keystore}" storepass="${keystorePassword}"/>

        <property name="tranche-commons.jar" value="${dist.lib}/tranche-commons.jar" />
        <property name="tranche-commons" value="${dist.lib}/tranche-commons" />
        <unzip src="${tranche-commons.jar}" dest="${tranche-commons}">
            <patternset>
                <exclude name="**/*.RSA"/>
                <exclude name="**/*.rsa"/>
                <exclude name="**/*.sf"/>
                <exclude name="**/*.SF"/>
            </patternset>
        </unzip>
        <delete file="${tranche-commons.jar}"/>
        <zip destfile="${tranche-commons.jar}" basedir="${tranche-commons}"/>
        <delete dir="${tranche-commons}"/>
        <signjar jar="${tranche-commons.jar}" alias="${keystoreAlias}" keystore="${keystore}" storepass="${keystorePassword}"/>
    </target>
</project>